package com.polianskyi.leetcode

import org.scalatest.funsuite.AnyFunSuite

class ValidSudokuTest extends AnyFunSuite {

  private val validator = new ValidSudoku()

  test("Check sudoku 1") {
    val res = validator.isValidSudoku(Array(
      Array('5', '3', '.', '.', '7', '.', '.', '.', '.'),
      Array('6', '.', '.', '1', '9', '5', '.', '.', '.'),
      Array('.', '9', '8', '.', '.', '.', '.', '6', '.'),
      Array('8', '.', '.', '.', '6', '.', '.', '.', '3'),
      Array('4', '.', '.', '8', '.', '3', '.', '.', '1'),
      Array('7', '.', '.', '.', '2', '.', '.', '.', '6'),
      Array('.', '6', '.', '.', '.', '.', '2', '8', '.'),
      Array('.', '.', '.', '4', '1', '9', '.', '.', '5'),
      Array('.', '.', '.', '.', '8', '.', '.', '7', '9')
    ))
    assertResult(true)(res)
  }

  test("Check sudoku 2") {
    val res = validator.isValidSudoku(Array(
      Array('8', '3', '.', '.', '7', '.', '.', '.', '.'),
      Array('6', '.', '.', '1', '9', '5', '.', '.', '.'),
      Array('.', '9', '8', '.', '.', '.', '.', '6', '.'),
      Array('8', '.', '.', '.', '6', '.', '.', '.', '3'),
      Array('4', '.', '.', '8', '.', '3', '.', '.', '1'),
      Array('7', '.', '.', '.', '2', '.', '.', '.', '6'),
      Array('.', '6', '.', '.', '.', '.', '2', '8', '.'),
      Array('.', '.', '.', '4', '1', '9', '.', '.', '5'),
      Array('.', '.', '.', '.', '8', '.', '.', '7', '9')
    ))
    assertResult(false)(res)
  }

  test("Check sudoku 3") {
    val res = validator.isValidSudoku(Array(
      Array('.', '.', '.', '9', '.', '.', '.', '.', '.'),
      Array('.', '.', '.', '.', '.', '.', '.', '.', '.'),
      Array('.', '.', '3', '.', '.', '.', '.', '.', '1'),
      Array('.', '.', '.', '.', '.', '.', '.', '.', '.'),
      Array('1', '.', '.', '.', '.', '.', '3', '.', '.'),
      Array('.', '.', '.', '.', '2', '.', '6', '.', '.'),
      Array('.', '9', '.', '.', '.', '.', '.', '7', '.'),
      Array('.', '.', '.', '.', '.', '.', '.', '.', '.'),
      Array('8', '.', '.', '8', '.', '.', '.', '.', '.')
    ))
    assertResult(false)(res)
  }

  test("Check sudoku 5") {
    val res = validator.isValidSudoku(Array(
      Array('.', '.', '.', '.', '.', '.', '.', '.', '.'),
      Array('6', '.', '9', '.', '.', '8', '.', '.', '.'),
      Array('.', '.', '.', '4', '.', '6', '.', '.', '.'),
      Array('.', '.', '.', '.', '.', '.', '.', '1', '.'),
      Array('.', '.', '.', '.', '2', '.', '.', '3', '.'),
      Array('.', '4', '.', '.', '.', '.', '.', '.', '4'),
      Array('5', '.', '.', '6', '.', '.', '.', '.', '.'),
      Array('.', '.', '.', '.', '.', '.', '.', '.', '.'),
      Array('.', '.', '.', '.', '7', '.', '6', '.', '.')
    ))
    assertResult(false)(res)
  }

}


